// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolizasService.Data;

#nullable disable

namespace PolizasService.Migrations
{
    [DbContext(typeof(PolizaDbContext))]
    [Migration("20250411002501_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PolizasService.Models.Cobertura", b =>
                {
                    b.Property<int>("IdCobertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCobertura"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCobertura");

                    b.ToTable("Coberturas");
                });

            modelBuilder.Entity("PolizasService.Models.EstadoPoliza", b =>
                {
                    b.Property<int>("IdEstadoPoliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoPoliza"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEstadoPoliza");

                    b.ToTable("EstadoPolizas");
                });

            modelBuilder.Entity("PolizasService.Models.Poliza", b =>
                {
                    b.Property<int>("IdPoliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPoliza"));

                    b.Property<string>("Aseguradora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CedulaAsegurado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CoberturaId")
                        .HasColumnType("int");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoPolizaId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaEmision")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInclusion")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaVencimiento")
                        .HasColumnType("date");

                    b.Property<decimal>("MontoAsegurado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroPoliza")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("Periodo")
                        .HasColumnType("date");

                    b.Property<decimal>("Prima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPolizaId")
                        .HasColumnType("int");

                    b.HasKey("IdPoliza");

                    b.HasIndex("CoberturaId");

                    b.HasIndex("EstadoPolizaId");

                    b.HasIndex("TipoPolizaId");

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("PolizasService.Models.TipoPoliza", b =>
                {
                    b.Property<int>("TipoPolizaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoPolizaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TipoPolizaId");

                    b.ToTable("TipoPolizas");
                });

            modelBuilder.Entity("PolizasService.Models.Poliza", b =>
                {
                    b.HasOne("PolizasService.Models.Cobertura", "Cobertura")
                        .WithMany("Polizas")
                        .HasForeignKey("CoberturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolizasService.Models.EstadoPoliza", "EstadoPoliza")
                        .WithMany("Polizas")
                        .HasForeignKey("EstadoPolizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolizasService.Models.TipoPoliza", "TipoPoliza")
                        .WithMany("Polizas")
                        .HasForeignKey("TipoPolizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cobertura");

                    b.Navigation("EstadoPoliza");

                    b.Navigation("TipoPoliza");
                });

            modelBuilder.Entity("PolizasService.Models.Cobertura", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("PolizasService.Models.EstadoPoliza", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("PolizasService.Models.TipoPoliza", b =>
                {
                    b.Navigation("Polizas");
                });
#pragma warning restore 612, 618
        }
    }
}
